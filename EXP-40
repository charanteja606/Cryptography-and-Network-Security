#include <stdio.h>
#include <string.h>
#include <ctype.h>

const char* engFreqOrder = "ETAOINSHRDLCUMWFGYPBVKJXQZ";

void countFreq(const char *text, int freq[26]) {
    for(int i=0; i<26; i++) freq[i] = 0;
    for(int i=0; text[i]; i++) {
        if(isalpha(text[i])) {
            freq[toupper(text[i]) - 'A']++;
        }
    }
}

void sortFreq(int freq[26], char letters[26]) {
    for(int i=0; i<26; i++) letters[i] = 'A' + i;
    for(int i=0; i<25; i++) {
        for(int j=i+1; j<26; j++) {
            if(freq[j] > freq[i]) {
                int tf = freq[i]; freq[i] = freq[j]; freq[j] = tf;
                char tc = letters[i]; letters[i] = letters[j]; letters[j] = tc;
            }
        }
    }
}

void applyMapping(const char *cipher, char *plain, char map[26]) {
    for(int i=0; cipher[i]; i++) {
        if(isalpha(cipher[i])) {
            int idx = toupper(cipher[i]) - 'A';
            char p = map[idx];
            if(islower(cipher[i])) p = tolower(p);
            plain[i] = p;
        } else {
            plain[i] = cipher[i];
        }
    }
    plain[strlen(cipher)] = '\0';
}

int main() {
    char ciphertext[1024], plaintext[1024];
    int topN;

    printf("Enter ciphertext: ");
    fgets(ciphertext, sizeof(ciphertext), stdin);
    ciphertext[strcspn(ciphertext, "\n")] = 0;

    printf("How many top guesses? (Note: this code generates 1 guess): ");
    scanf("%d", &topN);

    int freq[26];
    char cipherOrder[26];
    countFreq(ciphertext, freq);
    sortFreq(freq, cipherOrder);

    // Build map: map ciphertext letter frequency rank i to English letter frequency rank i
    char mapping[26];
    for(int i=0; i<26; i++) {
        int pos = cipherOrder[i] - 'A';
        mapping[pos] = engFreqOrder[i];
    }

    applyMapping(ciphertext, plaintext, mapping);

    printf("\nPossible plaintext guess (based on frequency mapping):\n%s\n", plaintext);
    return 0;
}
